@{
    ViewData["Title"] = "Details";
}
@section Scripts {
    <!-- Reference to CKEditor's CDN -->
    <script src="https://cdn.ckeditor.com/4.16.0/standard/ckeditor.js"></script>

    <!-- Script to initialize CKEditor for textareas -->
    <script>
        CKEDITOR.replace('Ingredients');
        CKEDITOR.replace('Method');
    </script>
}
@model RecipeModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUserModel> UserManager




<div class="card">
    <div class="card-header">
        <h2>@Model.RecipeName</h2>
    </div>
    <div class="card-body">
        <p><strong>Ingredients:</strong> @Html.Raw(Model.Ingredients)</p>
        <p><strong>Method:</strong> @Html.Raw(Model.Method)</p>
        @if (User.Identity.IsAuthenticated)
        {
            <h3>Rate this recipe</h3>
            <form asp-action="RateRecipe" asp-controller="Recipes" class="mb-3">
                <select name="ratingValue" class="form-control" style="width: auto; display: inline-block;">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                </select>
                <input type="hidden" name="recipeId" value="@Model.RecipeID" />
                <button type="submit" class="btn btn-primary">Rate</button>
            </form>
        }
        <h3>Average Rating: @ViewData["AverageRating"]</h3>
    </div>
</div>

@{
    // Check if the user is authenticated
    var isAuthenticated = User.Identity.IsAuthenticated;
    // Get the current user ID
    var currentUserId = UserManager.GetUserId(User);
    // Determine if the current user is the owner of the recipe
    var isOwner = isAuthenticated && Model.UserID == currentUserId;
}

<!-- Your existing details markup here -->
@if (isOwner)
{
    <a asp-action="Edit" asp-route-id="@Model.RecipeID" class="btn btn-primary">Edit Recipe</a>
}